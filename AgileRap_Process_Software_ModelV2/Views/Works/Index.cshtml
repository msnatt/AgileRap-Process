@model IEnumerable<AgileRap_Process_Software_ModelV2.Models.Work>

@{
    ViewData["Title"] = "Index";
    Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<SelectListItem> UserBag = ViewBag.UserBag;
    Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable<User> Luser = ViewBag.UserLogin;
}
<script>
    function FuncOperator() {
        console.log(document.getElementById("DivOperatorBtn"));

    }
    function FuncController() {

    }
</script>

<div class="row">
    <div class="col-md-3">
        <h1>รายการงาน</h1>
    </div>
    <div class="col-md-9 text-end">
        @Luser.First().Name
        @Html.ActionLink("Logout", "Index", "Home", new { }, new { @class = "btn-outline-secondary" })
    </div>
</div>

<br />
<br />

@*ทำตัวกรอง*@
@using (Html.BeginForm("Index", "Works", FormMethod.Get, new { @class = "" }))
{
    <div class="row">
        <div id="DivOperatorBtn" class="col-md-1 text-end" style="padding:1px;">
            <input value="Operator" type="button" class="btn btn-outline-success" onclick="FuncOperator()" />
        </div>
        <div id="DivControllerBtn" class="col-md-1" style="padding:1px;">
            <input value="Controller" type="button" class="btn btn-outline-danger" onclick="FuncController()" />
        </div>
    </div>
    <div class="row">
        <div class="col-auto">
            @Html.DisplayNameFor(b => b.First().CreateBy)
        </div>
        <div class="col-md-1">
            @Html.DropDownList("AssignBy", new SelectList(UserBag, "Value", "Text", Context.Session.GetInt32("UserID")), "Select Requester", new { @class = "form-select" })
        </div>
        <div class="col-auto">
            @Html.DisplayNameFor(b => b.First().ProviderList)
        </div>
        <div class="col-md-2">
            @Html.DropDownList("AssignTo", new SelectList(UserBag, "Value", "Text"), "Select Provider", new { @class = "form-select" })
        </div>
        <div class="col-auto">
            @Html.DisplayNameFor(b => b.First().Project)
        </div>
        <div class="col-md-2">
            @Html.DropDownList("Project", new SelectList(UserBag, "Value", "Text"), "Select Project", new { @class = "form-select" })
        </div>
        <div class="col-auto">
            @Html.DisplayNameFor(b => b.First().StatusID)
        </div>
        <div class="col-md-2">
            @Html.DropDownList("Status", new SelectList(UserBag, "Value", "Text"), "Select Status", new { @class = "form-select" })
        </div>
    </div>
}

<table class="table table-borlesses">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CreateDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreateBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProviderList)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StatusID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Remark)
            </th>
            <th>
                @Html.DisplayName("Manage")
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => UserBag.Where(b => b.Value == item.CreateBy.ToString()).First().Text)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProviderList)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.StatusName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Remark)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "Works", new { id = item.ID, UserID = Luser.First().ID }, new { @class = "btn btn-outline-secondary" }) |
                    @Html.ActionLink("History", "History", "Works", new { id = item.ID, UserID = Luser.First().ID }, new { @class = "btn btn-outline-secondary" })
                </td>
            </tr>
        }
        <tr>
            <td class="text-center">
                @Html.ActionLink("Create Task", "Create", "Works", new { UserID = Luser.First().ID }, new { @class = "btn btn-outline-primary" })
            </td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>

    </tbody>
</table>
